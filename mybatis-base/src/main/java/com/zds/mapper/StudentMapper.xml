<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zds.mapper.StudentMapper">
    <sql id="studentColumns">
        id
        ,s_name,s_birthday,s_sex
    </sql>

    <insert id="insertStudent" parameterType="student">
        insert into student
        values (#{id}, #{sName}, #{sBirthday}, #{sSex})
    </insert>

    <delete id="deleteStudentById" parameterType="long">
        delete
        from student
        where id = #{id}
    </delete>

    <delete id="batchDeleteStudentByIds">
        delete from student
        <where>
            <if test="ids != null and ids.size() > 0">
                id in
                <foreach collection="ids" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </delete>

    <update id="updateStudent" parameterType="student">
        update student
        <set>
            <if test="sName != null">
                s_name = #{sName}
            </if>
            <if test="sBirthday != null">
                , s_birthday = #{sBirthday}
            </if>
            <if test="sSex != null">
                , s_sex = #{sSex}
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateStudent" parameterType="student">
        update student
        set
        <choose>
            <when test="sName != null">
                s_name = #{sName}
            </when>
            <otherwise>
                s_name = 1
            </otherwise>
        </choose>
        where id = #{id}
    </update>

    <select id="selectStudentById" parameterType="long" resultType="student">
        select
        <include refid="studentColumns"/>
        from student where id = #{id}
    </select>

    <select id="selectStudents" resultType="student">
        select
        <include refid="studentColumns"/>
        from student
    </select>

    <select id="getStudentsWithTeachers" resultMap="studentsWithTeachersMap">
        select stu.id s_id, stu.s_name, stu.s_birthday, stu.s_sex, t.id t_id, t.t_name
        from teacher t,
             student stu,
             score sc,
             course c
        where sc.s_id = stu.id
          and sc.c_id = c.id
          and c.t_id = t.id
    </select>

    <select id="getStudentWithScore" resultMap="studentWithScoreMap">
        select stu.id s_id, stu.s_name, stu.s_birthday, stu.s_sex, sc.s_id, sc.c_id, sc.score
        from student stu,
             score sc
        where stu.id = sc.s_id
    </select>

    <select id="getStudentWithScoreById" resultMap="studentWithScoreMap">
        select stu.id s_id, stu.s_name, stu.s_birthday, stu.s_sex, sc.s_id, sc.c_id, sc.score
        from student stu,
             score sc
        where stu.id = sc.s_id and stu.id = #{id}
    </select>

    <resultMap id="studentWithScoreMap" type="com.zds.entity.StudentAndScore" extends="studentMap">
        <collection property="scoreList" ofType="com.zds.entity.Score">
            <result property="sId" column="s_id"/>
            <result property="cId" column="c_id"/>
            <result property="score" column="score"/>
        </collection>
    </resultMap>

    <resultMap id="studentMap" type="com.zds.entity.Student">
        <id property="id" column="s_id"/>
        <result property="sName" column="s_name"/>
        <result property="sBirthday" column="s_birthday"/>
        <result property="sSex" column="s_sex"/>
    </resultMap>

    <resultMap id="studentsWithTeachersMap" type="com.zds.entity.StudentAndTeacher" extends="studentMap">
        <collection property="teacherList" ofType="com.zds.entity.Teacher">
            <id property="id" column="t_id"/>
            <result property="tName" column="t_name"/>
        </collection>
    </resultMap>
</mapper>